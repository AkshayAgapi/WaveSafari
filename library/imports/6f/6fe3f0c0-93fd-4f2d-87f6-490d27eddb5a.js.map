{"version":3,"sources":["../../../../../assets/Script/Joystick/assets/Script/Joystick/Joystick.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/Script/Joystick","sourcesContent":["const {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Joystick extends cc.Component {\n\n    @property(cc.Node)\n    JoystickNode: cc.Node = null;\n\n    @property(cc.Node)\n    Joystick_Ball: cc.Node = null;\n\n    @property\n    Joystick_Vector: cc.Vec3 = cc.v3();\n\n    @property\n    Joystick_Max: number = 100;\n\n    onLoad() {\n        this.node.on(cc.Node.EventType.TOUCH_START, this.Joystick_Touch_Start, this);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.Joystick_Touch_Move, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this.Joystick_Touch_End, this);\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.Joystick_Touch_End, this);\n    \n        // Initially hide or position the joystick off-screen\n        // this.node.setPosition(offScreenPosition);\n        // OR\n        this.JoystickNode.active = false;\n    }\n\n    private Joystick_Touch_Start(event: cc.Event.EventTouch): void {\n        let touch_pos = event.getLocation();\n        let world_pos = this.node.convertToNodeSpaceAR(touch_pos);\n    \n        // Assuming 'this.joystickNode' refers to your actual joystick node\n        this.JoystickNode.setPosition(world_pos);\n        this.JoystickNode.active = true;\n    }\n\n    private Joystick_Touch_Move(event: cc.Event.EventTouch): void {\n        let touch = event.getTouches()[0];\n        let touch_pos = touch.getLocation();\n        // Convert the touch position to the JoystickNode's local space\n        let local_touch_pos = this.JoystickNode.convertToNodeSpaceAR(touch_pos);\n    \n        // Limit the joystick vector based on the joystick's max radius\n        let limitedVector = this.Limit_joystick_Vector(local_touch_pos);\n        this.Set_Joystick_Ball_Position(limitedVector); // Pass the limited vector for setting position\n        this.Joystick_Vector = limitedVector;\n    }\n\n    private Joystick_Touch_End(): void {\n        this.Joystick_Vector = cc.Vec3.ZERO;\n        this.Set_Joystick_Ball_Position(cc.Vec3.ZERO);\n\n          // Optionally hide or move the joystick off-screen\n    // this.node.setPosition(offScreenPosition);\n    // OR\n    this.JoystickNode.active = false; // Make the whole joystick disappear after lifting the finger\n    }\n\n    private Set_Joystick_Ball_Position(pos: cc.Vec3): void {\n        this.Joystick_Ball.setPosition(pos);\n    }\n\n    private Limit_joystick_Vector(joystick_vector: cc.Vec3): cc.Vec3 {\n        let input_mag = joystick_vector.mag();\n        if (input_mag > this.Joystick_Max) {\n            // Create a new limited vector without modifying the original joystick_vector\n            return joystick_vector.normalize().mul(this.Joystick_Max);\n        }\n        return joystick_vector;\n    }\n}\n"]}