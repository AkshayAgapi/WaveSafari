{"version":3,"sources":["../../../../assets/Script/assets/Script/Boat.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../assets/Script","sourcesContent":["import BoatInputController from \"./BoatInputController\";\nimport PathHub from \"./PathHub\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class TriggerHandler extends cc.Component {\n\n    @property(cc.Node)\n    idleRippleEffect: cc.Node = null;\n\n    @property(BoatInputController)\n    inputController: BoatInputController = null;\n\n    private currentWord = \"APPLE\";\n    private currentLetterIndex = 0;\n\n    onLoad() {\n\n        let physics_manager = cc.director.getPhysicsManager()\n        physics_manager.enabled = true;\n        physics_manager.gravity = cc.v2 (0, 0);\n\n        // Register collision event listener\n        cc.director.getCollisionManager().enabled = true; // Enable collision detection\n        //cc.director.getCollisionManager().enabledDebugDraw = true; // Enable debug draw to visualize collisions\n\n        // Listen for collision events\n        cc.director.getCollisionManager().on('collision-enter', this.onCollisionEnter, this);\n        cc.director.getCollisionManager().on('collision-exit', this.onCollisionExit, this);\n    }\n\n    update(dt: number) {\n        // Assuming 'currentVelocity' is updated elsewhere in your code\n        // Check if velocity is approximately zero\n        if (this.inputController.isIdle) {\n            // Velocity is near zero, enable the idle ripple effect\n            if (!this.idleRippleEffect.active) {\n                this.idleRippleEffect.active = true;\n            }\n        } else {\n            // Velocity is not zero, ensure the ripple effect is disabled\n            if (this.idleRippleEffect.active) {\n                this.idleRippleEffect.active = false;\n            }\n        }\n    }\n\n    onCollisionEnter(other: cc.Collider, self: cc.Collider) {\n        console.log('Object entered the trigger area:', other.node.name);\n\n        const supposeLetter = this.currentWord[this.currentLetterIndex]\n        const hub = other.node.getComponent(PathHub);\n        console.log(hub)\n\n        if(hub != null)\n        {\n            console.log(\"true\")\n\n            const hubData = hub.getData();\n            if(supposeLetter == hubData)\n            {\n                //perfect collision\n                other.node.destroy();\n                this.currentLetterIndex++;\n            }\n            else\n            {\n                //do nothing as of now\n            }\n        }\n    }\n\n    onCollisionExit(event: cc.Event.EventCustom) {\n        \n    }\n\n    onDestroy() {\n        // Unregister collision event listener\n        cc.director.getCollisionManager().off('collision-enter', this.onCollisionEnter, this);\n        cc.director.getCollisionManager().off('collision-exit', this.onCollisionExit, this);\n    }\n}\n\n//        const newPosition = cc.v2(this.boatSprite.node.position.x + this.currentVelocity.x * dt, this.boatSprite.node.position.y + this.currentVelocity.y * dt);\n"]}