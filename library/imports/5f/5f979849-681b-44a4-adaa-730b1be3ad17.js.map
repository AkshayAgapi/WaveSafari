{"version":3,"sources":["../../../../assets/Script/assets/Script/SegmentToJsonTool.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC;AAG5C,IAAqB,iBAAiB,GAAtC,MAAqB,iBAAkB,SAAQ,EAAE,CAAC,SAAS;IAD3D;;QAII,gBAAW,GAAY,IAAI,CAAC,CAAC,2CAA2C;IA0C5E,CAAC;IAxCG,KAAK;QACD,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,CAAC;IAED,mBAAmB;QACf,IAAI,WAAW,GAAG;YACd,KAAK,EAAE,EAAE;SACZ,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACtC,mDAAmD;YACnD,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;gBACtC,IAAI,GAAG,UAAU,CAAC;aACrB;iBAAM,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;gBACxC,IAAI,GAAG,KAAK,CAAC;aAChB;iBAAM,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;gBAC5C,IAAI,GAAG,SAAS,CAAC;aACpB;iBAAM,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;gBAC5C,IAAI,GAAG,SAAS,CAAC;aACpB;iBAAM,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;gBAC5C,IAAI,GAAG,SAAS,CAAC;aACpB;YAED,8DAA8D;YAC9D,IAAI,IAAI,EAAE;gBACN,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC;oBACnB,IAAI,EAAE,IAAI;oBACV,QAAQ,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE;oBACtD,KAAK,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE;oBAC3C,QAAQ,EAAE,KAAK,CAAC,KAAK;oBACrB,MAAM,EAAE,KAAK,CAAC,cAAc,EAAE;oBAC9B,IAAI,EAAE,KAAK,CAAC,cAAc,EAAE;iBAC/B,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;QAEH,gCAAgC;QAChC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,oBAAoB;IAC3E,CAAC;CACJ,CAAA;AA1CG;IADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;sDACU;AAHX,iBAAiB;IADrC,OAAO;GACa,iBAAiB,CA6CrC;kBA7CoB,iBAAiB","file":"","sourceRoot":"../../../../assets/Script","sourcesContent":["const { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class SegmentToJsonTool extends cc.Component {\n\n    @property(cc.Node)\n    segmentNode: cc.Node = null; // Assign your segment prefab instance here\n\n    start() {\n        this.generateSegmentJSON();\n    }\n\n    generateSegmentJSON() {\n        let segmentData = {\n            items: []\n        };\n\n        this.segmentNode.children.forEach(child => {\n            // Determine the type based on the node name or tag\n            let type = \"\";\n            if (child.name.indexOf(\"Obstacle\") === 0) {\n                type = \"obstacle\";\n            } else if (child.name.indexOf(\"Gem\") === 0) {\n                type = \"gem\";\n            } else if (child.name.indexOf(\"Island1\") === 0) {\n                type = \"island1\";\n            } else if (child.name.indexOf(\"Island2\") === 0) {\n                type = \"island2\";\n            } else if (child.name.indexOf(\"FuelCan\") === 0) {\n                type = \"fuelCan\";\n            }\n\n            // Add item to segment data with position, scale, and rotation\n            if (type) {\n                segmentData.items.push({\n                    type: type,\n                    position: { x: child.position.x, y: child.position.y },\n                    scale: { x: child.scaleX, y: child.scaleY },\n                    rotation: child.angle, // For Cocos Creator 3.x, use child.angle for 2D rotation\n                    anchor: child.getAnchorPoint(),\n                    size: child.getContentSize()\n                });\n            }\n        });\n\n        // Log or export the JSON string\n        console.log(JSON.stringify(segmentData, null, 4)); // Pretty print JSON\n    }\n}\n"]}